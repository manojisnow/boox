name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  hadolint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Hadolint on Dockerfile (root)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  backend:
    name: Java Backend Build & Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Build & Test Backend
        run: |
          cd backend
          mvn clean verify
      - name: Run Checkstyle
        run: |
          cd backend/chatapp
          mvn checkstyle:checkstyle
      - name: Run PMD
        run: |
          cd backend/chatapp
          mvn pmd:pmd
      - name: Run SpotBugs
        run: |
          cd backend/chatapp
          mvn spotbugs:spotbugs
      - name: Run Jacoco Coverage
        run: |
          cd backend/chatapp
          mvn jacoco:report
      - name: Upload Static Analysis Reports
        uses: actions/upload-artifact@v4
        with:
          name: static-analysis-reports
          path: |
            backend/chatapp/target/checkstyle-result.xml
            backend/chatapp/target/pmd.xml
            backend/chatapp/target/spotbugsXml.xml
            backend/chatapp/target/jacoco.xml

  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run frontend tests
        run: |
          cd frontend
          npm test -- --watchAll=false --passWithNoTests
  docker-build-and-test:
    name: Docker Build & Smoke Test
    runs-on: ubuntu-latest
    # This job should only run after the source code jobs succeed
    needs: [backend, frontend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build -t boox-app:ci-${{ github.sha }} .

      - name: Run the container using Docker Compose
        # We run in detached mode and override the image to use the one we just built
        run: |
          # Create a temporary .env file for docker-compose to use
          echo "BOOX_IMAGE_TAG=ci-${{ github.sha }}" > .env
          docker compose up -d

      - name: Wait for container to be healthy
        # This gives the app time to start and respects the HEALTHCHECK in the Dockerfile
        # The script will fail if the container doesn't become healthy in time.
        run: |
          echo "Waiting for container to become healthy..."
          end_time=$((SECONDS + 90))
          
          while [ $SECONDS -lt $end_time ]; do
            # Get the container ID for the 'app' service
            container_id=$(docker compose ps -q app)
          
            # Check if the container is running
            if [ -z "$container_id" ]; then
              echo "::error::Container for 'app' service has exited unexpectedly."
              docker compose logs app || echo "Could not retrieve logs."
              exit 1
            fi

            status=$(docker inspect --format '{{if .State.Health}}{{.State.Health.Status}}{{end}}' "$container_id" 2>/dev/null)
          
            if [ "$status" == "healthy" ]; then
              echo "Container is healthy!"
              exit 0
            fi

            if [ "$status" == "unhealthy" ]; then
              echo "::error::Container reported as unhealthy."
              docker compose logs app
              exit 1
            fi
          
            sleep 3
          done

          echo "::error::Timeout reached while waiting for container to become healthy."
          docker compose logs app
          exit 1
      - name: Check container logs for errors
        run: docker compose logs app
